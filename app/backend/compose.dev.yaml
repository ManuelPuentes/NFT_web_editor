version: '3.3'
services:
  backend:
    container_name: editor_backend
    build:
      context: .
      dockerfile: ./Dockerfile.dev
    ports:
      - "3000:3000"
    env_file:
      - ./.env
    depends_on:
      - postgres
      - redis
    restart: always
    command: ["npm", "run", "dev"]
    networks:
      - web_editor

  postgres:
    container_name: postgres
    image: postgres:16.2-alpine3.19
    ports:
      - '5432:5432'
    volumes:
      - editor_postgres_data:/var/lib/postgresql/data
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
      POSTGRES_DB: editor
    restart: always
    healthcheck:
      test: ['CMD', 'pg_isready', '-d', 'editor', '-U', 'user']
      interval: 10s
      retries: 5
    networks:
      - web_editor

  redis:
    container_name: redis
    image: redis:7.2.4-alpine
    ports:
      - '6379:6379'
    volumes:
      - editor_redis_data:/data
    restart: always
    healthcheck:
      test: ['CMD', 'redis-cli', 'ping']
      interval: 10s
      timeout: 5s
      retries: 3
    networks:
      - web_editor

  redis_insight:
    container_name: redis_insight
    image: redis/redisinsight:latest
    volumes:
      - editor_redis_insight_data:/db
    ports:
      - 5540:5540

  nginx:
    container_name: web_editor_nginx_development
    image: nginx:1.21-alpine
    volumes:
      - ./nginx.conf:/etc/nginx/nginx.conf
      - ./collections:/var/www/files
    restart: always
    ports:
      - 9999:9999
    networks:
      - web_editor 

volumes:
 editor_postgres_data:
 editor_redis_data:
 editor_redis_insight_data:

networks:
  web_editor:
